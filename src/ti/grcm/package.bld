/*
 * Copyright (c) 2011, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */


/*
 *  ======== package.bld ========
 *
 */

/* explicit references to global objects */
var Build = xdc.useModule('xdc.bld.BuildEnvironment');
var Pkg = xdc.useModule('xdc.bld.PackageContents');

/* use common package build support */
var BuildHelp = xdc.useModule('ti.tools.build.PackageBuildHelp');

BuildHelp.skipLib = function(lib, targ)
{
    /* build grcm_syslink.a only for Linux targets */
    if (lib.name.match(/syslink/)) {
        return targ.os != "Linux" ? true : false;
    }
    else {
        return false;
    }
}

/* clean lib folder */
Pkg.generatedFiles.$add("lib/");
Pkg.generatedFiles.$add("nocfg/");
Pkg.generatedFiles.$add("nocfg.mak");
Pkg.libDir = "package/";

/* add custom makefiles to build model */
Pkg.makePrologue =
    "-include prologue.mak\n" +
    "-include docs.mak\n";

Pkg.attrs.exportSrc = false;
/* add custom files to all releases */
Pkg.otherFiles = [
    "RcmClient.h",
    "RcmServer.h",
    "RcmTypes.h"
];

// list of libraries to build
var libArray = new Array();

// grcm with ti.ipc
libArray.push(
    new BuildHelp.LibAttrs({
        name: "grcm",
        sources: [
            "RcmServer.c",
            "RcmUtils.c"
        ],
        libAttrs: {
            defs: "-DRCM_ti_ipc"
        }
    })
);

// grcm with ti.syslink (ARM only)
libArray.push(
    new BuildHelp.LibAttrs({
        name: "grcm_syslink",
        sources: [
            "RcmServer.c",
            "RcmUtils.c"
        ],
        libAttrs: {
            defs: "-DRCM_ti_syslink"
        },
        icw: [ "v5T" ]
    })
);

/* generate the package libraries */
BuildHelp.makeLibraries(libArray, arguments, ["debug","release"]);
